# Attach a component_id, a block_id, or an instance_id to the root.
display_builder.api_root_attach:
  path: "/api/display-builder/{builder_id}"
  methods: [POST]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::attachToRoot'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true
    # _theme: none

# Attach a component_id, a block_id, or an instance_id to a slot.
display_builder.api_slot_attach:
  path: "/api/display-builder/{builder_id}/instance/{instance_id}/{slot}"
  methods: [POST]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::attachToSlot'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true
    # _theme: none

display_builder.api_instance_get:
  path: "/api/display-builder/{builder_id}/instance/{instance_id}"
  methods: [GET]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::getInstance'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true
    _theme: none

display_builder.api_instance_update:
  path: "/api/display-builder/{builder_id}/instance/{instance_id}"
  methods: [PUT, POST]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::updateInstance'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true

display_builder.api_instance_delete:
  path: "/api/display-builder/{builder_id}/instance/{instance_id}"
  methods: [DELETE]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::deleteInstance'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true

display_builder.api_third_party_settings_update:
  path: "/api/display-builder/{builder_id}/instance/{instance_id}/settings/{panel_id}"
  methods: [PUT]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::thirdPartySettingsUpdate'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true

display_builder.api_undo:
  path: "/api/display-builder/{builder_id}/undo"
  methods: [POST]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::undo'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true

display_builder.api_redo:
  path: "/api/display-builder/{builder_id}/redo"
  methods: [POST]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::redo'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true

display_builder.api_save:
  path: "/api/display-builder/{builder_id}/save"
  methods: [POST]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::save'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true

display_builder.api_reset:
  path: "/api/display-builder/{builder_id}/reset"
  methods: [POST]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::reset'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true

display_builder.api_clear:
  path: "/api/display-builder/{builder_id}/clear"
  methods: [POST]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiController::clear'
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true

display_builder.api_component_preview:
  path: "/api/display-builder/component/{component_id}/preview/{variant_id}"
  methods: [GET]
  defaults:
    _controller: '\Drupal\display_builder\Controller\ApiPreviewController::getComponentPreview'
    variant_id: "default"
  requirements:
    _permission: "administer display builders"
  options:
    _htmx_route: true
